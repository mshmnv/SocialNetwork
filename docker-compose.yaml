version: "3.8"
services:
  db:
    container_name: db_container
    image: postgres:15.2-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: root
      POSTGRES_DB: social_network
    volumes:
      - ./postgresql/db_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - pgnet

#  db_async:
#    container_name: db_async_container
#    image: postgres:15.2-alpine
#    ports:
#      - "5433:5432"
#    environment:
#      POSTGRES_USER: admin
#      POSTGRES_PASSWORD: root
#    volumes:
#      - ./postgresql/db_data_async/:/var/lib/postgresql/data
#    restart: unless-stopped
#    depends_on:
#      - db
#    networks:
#      - pgnet

#  db_sync_1:
#    container_name: db_sync_1_container
#    image: postgres:15.2-alpine
#    ports:
#      - "5434:5432"
#    environment:
#      POSTGRES_USER: admin
#      POSTGRES_PASSWORD: root
#    volumes:
#      - ./postgresql/db_data_sync_1/:/var/lib/postgresql/data
#    restart: unless-stopped
#    depends_on:
#      - db
#    networks:
#      - pgnet
#
#  db_sync_2:
#    container_name: db_sync_2_container
#    image: postgres:15.2-alpine
#    ports:
#      - "5435:5432"
#    environment:
#      POSTGRES_USER: admin
#      POSTGRES_PASSWORD: root
#    volumes:
#      - ./postgresql/db_data_sync_2/:/var/lib/postgresql/data
#    restart: unless-stopped
#    depends_on:
#      - db
#    networks:
#      - pgnet

  server:
    container_name: server_container
    build:
      context: .
      dockerfile: ./build/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - db
      - cache
    restart: always
    networks:
      - pgnet
      - appnet

  grafana:
    build:
      context: ./grafana
      dockerfile: ./Dockerfile
    ports:
      - "3000:3000"
    environment:
      GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH: "/var/lib/grafana/dashboards/dashboard.json"
    networks:
      - appnet

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    restart: always
    networks:
      - appnet
      - pgnet

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    ports:
      - 9187:9187
    environment:
      DATA_SOURCE_NAME: "postgres://admin:root@db_container:5432/social_network?sslmode=disable"
#      DATA_SOURCE_NAME: "postgres://admin:root@db_container:5432/social_network?sslmode=disable,postgres://admin:root@db_async_container:5432/social_network?sslmode=disable"
    links:
      - db
#      - db_async
      - prometheus
    networks:
      - pgnet
      - appnet

  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - ./cache_data:/data
    networks:
      - appnet

volumes:
  db_data:
  prometheus_data:
  cache_data:
#  db_data_async:
#  db_data_sync_1:
#  db_data_sync_2:

networks:
  pgnet:
    ipam:
      config:
          - subnet: "172.16.0.0/16"
  appnet: