version: "3.8"
services:
  db:
    container_name: db_container
    image: postgres:15.2-alpine
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: social_network
      PGDATA: /var/lib/postgresql/data/db_data
    volumes:
      - ./postgresql/db_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - pgnet

#  db_async:
#    container_name: db_async_container
#    image: postgres:15.2-alpine
#    ports:
#      - "5433:5432"
#    environment:
#      POSTGRES_USER: ${POSTGRES_USER}
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#    volumes:
#      - ./postgresql/db_data_async/:/var/lib/postgresql/data
#    restart: unless-stopped
#    depends_on:
#      - db
#    networks:
#      - pgnet

#  db_sync_1:
#    container_name: db_sync_1_container
#    image: postgres:15.2-alpine
#    ports:
#      - "5434:5432"
#    environment:
#      POSTGRES_USER: ${POSTGRES_USER}
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#    volumes:
#      - ./postgresql/db_data_sync_1/:/var/lib/postgresql/data
#    restart: unless-stopped
#    depends_on:
#      - db
#    networks:
#      - pgnet
#
#  db_sync_2:
#    container_name: db_sync_2_container
#    image: postgres:15.2-alpine
#    ports:
#      - "5435:5432"
#    environment:
#      POSTGRES_USER: ${POSTGRES_USER}
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#    volumes:
#      - ./postgresql/db_data_sync_2/:/var/lib/postgresql/data
#    restart: unless-stopped
#    depends_on:
#      - db
#    networks:
#      - pgnet

  server:
    container_name: server_container
    build:
      context: .
      dockerfile: ./build/Dockerfile
    ports:
      - "${SERVER_HTTP_PORT}:${SERVER_HTTP_PORT}"
    depends_on:
      - db
      - redis
      - rabbitmq
    restart: always
    networks:
      - pgnet
      - appnet

  grafana:
    build:
      context: ./grafana
      dockerfile: ./Dockerfile
    ports:
      - "3000:3000"
    environment:
      GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH: "/var/lib/grafana/dashboards/dashboard.json"
    networks:
      - appnet

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    restart: always
    networks:
      - appnet
      - pgnet

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    ports:
      - 9187:9187
    environment:
      DATA_SOURCE_NAME: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db_container:5432/social_network?sslmode=disable"
#      DATA_SOURCE_NAME: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db_container:5432/social_network?sslmode=disable,postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db_async_container:5432/social_network?sslmode=disable"
    links:
      - db
#      - db_async
      - prometheus
    networks:
      - pgnet
      - appnet

  redis:
    container_name: redis_container
    image: redis:6.2-alpine
    restart: always
    ports:
      - '${REDIS_PORT}:${REDIS_PORT}'
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - ./redis_data:/data
    networks:
      - appnet

# SHARDING

  db-shard-1:
    container_name:  ${POSTGRES_SHARD_1_HOST}
    image: postgres:15.2-alpine
    ports:
      - "${POSTGRES_SHARD_1_PORT}:${POSTGRES_PORT}"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: social_network
      PGDATA: /var/lib/postgresql/data/db_shard_1_data
    volumes:
      - ./postgresql/db_shard_1_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - pgnet

  db-shard-2:
    container_name: ${POSTGRES_SHARD_2_HOST}
    image: postgres:15.2-alpine
    ports:
      - "${POSTGRES_SHARD_2_PORT}:${POSTGRES_PORT}"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: social_network
      PGDATA: /var/lib/postgresql/data/db_shard_2_data
    volumes:
      - ./postgresql/db_shard_2_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - pgnet

  rabbitmq:
#    container_name: rabbitmq_container
    image: rabbitmq:3-management-alpine
    ports:
      - "${RABBITMQ_PORT}:${RABBITMQ_PORT}"
      - "${RABBITMQ_MANAGEMENT_PORT}:${RABBITMQ_MANAGEMENT_PORT}"
    #    environment:
    #      - RABBITMQ_DEFAULT_USER=admin
    #      - RABBITMQ_DEFAULT_PASS=admin
    volumes:
      - ./rabbitmq_data/data/:/var/lib/rabbitmq
      - ./rabbitmq_data/log/:/var/log/rabbitmq
    restart: always
    networks:
      - appnet

volumes:
  db_data:
  prometheus_data:
  redis_data:
#  db_data_async:
#  db_data_sync_1:
#  db_data_sync_2:
  db_shard_1_data:
  db_shard_2_data:
  rabbitmq_data:

networks:
  pgnet:
    ipam:
      config:
          - subnet: "172.16.0.0/16"
  appnet: